generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id                String                 @id @default(cuid())
  name              String
  username          String                 @unique
  password          String
  createdAt         DateTime               @default(now())
  updatedAt         DateTime               @updatedAt
  classifications   AnimalClassification[]
  history           UserHistory[]

  @@map("users")
}

model AnimalClassification {
  id                String   @id @default(cuid())
  animalType        String
  imageUrl          String
  imagePath         String
  bodyLength        Float?
  heightAtWithers   Float?
  chestWidth        Float?
  rumpAngle         Float?
  bodyCondition     Float?
  overallScore      Float
  breedScore        Float?
  conformationScore Float?
  breed             String?
  age               Int?
  weight            Float?
  gender            String?
  farmId            String?
  farmName          String?
  location          String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  analysisNotes     String?
  confidence        Float?
  userId            String
  source            String   @default("upload") // "upload" or "live"
  farm              Farm?    @relation(fields: [farmId], references: [id])
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("animal_classifications")
}

model UserHistory {
  id                String   @id @default(cuid())
  userId            String
  animalType        String
  imageUrl          String
  imagePath         String
  bodyLength        Float?
  heightAtWithers   Float?
  chestWidth        Float?
  rumpAngle         Float?
  bodyCondition     Float?
  overallScore      Float
  breedScore        Float?
  conformationScore Float?
  breed             String?
  age               Int?
  weight            Float?
  gender            String?
  farmId            String?
  farmName          String?
  location          String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  analysisNotes     String?
  confidence        Float?
  source            String   @default("upload") // "upload" or "live"
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("user_history")
}

model Farm {
  id              String                 @id @default(cuid())
  name            String
  location        String?
  contactInfo     String?
  createdAt       DateTime               @default(now())
  updatedAt       DateTime               @updatedAt
  classifications AnimalClassification[]

  @@map("farms")
}
